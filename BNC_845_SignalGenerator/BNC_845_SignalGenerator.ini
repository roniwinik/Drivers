# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: BNC 845 Signal Generator

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path:



[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: MODEL 845
model_str_2: MODEL 835

# Check instrument model id at startup (True or False). Default is False
check_model: True


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

str_value_out: %.6E

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: :ABOR;:FREQ:MODE FIX;:PHAS:REF;:POW:MODE FIX;:INIT:CONT ON;:INIT:IMM;

# Final commands sent to the instrument when closing the driver
final: 

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   model_value_1: Value of "model" for which the control is visible
#   model_value_2: Value of "model" for which the control is visible
#   ...
#   option_value_1: Value of "installed option" for which the control is visible
#   option_value_2: Value of "installed option" for which the control is visible
#   ...
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Frequency]
unit: Hz
datatype: DOUBLE
def_value: 5.0E9
set_cmd: :FREQ

[Phase]
unit: rad
datatype: DOUBLE
def_value: 0
set_cmd: :PHAS

[Output unit]
datatype: COMBO
def_value: Power [dBm]
combo_def_1: Power [dBm]
combo_def_2: Power [W]
combo_def_3: Voltage [V]
cmd_def_1: dBmW
cmd_def_2: W
cmd_def_3: V
set_cmd: :UNIT:POW

[Power]
unit: dBm
datatype: DOUBLE
def_value: -120
set_cmd: :POW <*>DBM
get_cmd: :POW?
state_quant: Output unit
state_value_1: Power [dBm]

[Power - Watt]
unit: W
datatype: DOUBLE
def_value: 1E-12
set_cmd: :POW <*>W
get_cmd: :POW?
state_quant: Output unit
state_value_1: Power [W]

[Voltage]
unit: V
datatype: DOUBLE
def_value: 1E-6
set_cmd: :POW <*>V
get_cmd: :POW?
state_quant: Output unit
state_value_1: Voltage [V]

[Automatic levelling control (ALC)]
datatype: BOOLEAN
def_value: True
set_cmd: :POW:ALC

[Output]
datatype: BOOLEAN
def_value: False
set_cmd: :OUTP

[Pulse modulation]
datatype: BOOLEAN
def_value: False
set_cmd: :PULM:STAT
group: Pulse modulation 
#section: Modulation

[Pulse polarity]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
group: Pulse modulation 
set_cmd: :PULM:POL
#section: Modulation

[Pulse modulation source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
group: Pulse modulation 
set_cmd: :PULM:SOUR
#section: Modulation

[Pulse width]
unit: s
datatype: DOUBLE
def_value: 100E-9
set_cmd: :PULM:INT:PWID
state_quant: Pulse modulation source
state_value_1: Internal
group: Pulse modulation 
#section: Modulation

[Pulse period]
unit: s
datatype: DOUBLE
def_value: 1E-3
high_lim: 10
set_cmd: :PULM:INT:PER
state_quant: Pulse modulation source
state_value_1: Internal
group: Pulse modulation 
#section: Modulation


[Reference]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
combo_def_3: Slave
cmd_def_1: INT
cmd_def_2: EXT
cmd_def_3: SLAV
set_cmd: :ROSC:SOUR
group: Reference
section: Trig/Reference

[Ext. Frequency]
unit: Hz
datatype: DOUBLE
def_value: 10E6
set_cmd: :ROSC:EXT:FREQ
state_quant: Reference
state_value_1: External
group: Reference
section: Trig/Reference

[Reference output]
datatype: BOOLEAN
def_value: True
set_cmd: :ROSC:OUTP:STAT
group: Reference
section: Trig/Reference

[Output ref. frequency]
unit: Hz
datatype: DOUBLE
def_value: 10E6
set_cmd: :ROSC:OUTP:FREQ
group: Reference
section: Trig/Reference


[Trigger]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: External
combo_def_3: Front-panel key
combo_def_4: Bus
cmd_def_1: IMM
cmd_def_2: EXT
cmd_def_3: KEY
cmd_def_4: BUS
set_cmd: :TRIG:SOUR
group: Trigger
section: Trig/Reference

[Trig type]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Gate
combo_def_3: Point
cmd_def_1: NORM
cmd_def_2: GATE
cmd_def_3: POIN
set_cmd: :TRIG:TYPE
group: Trigger
section: Trig/Reference

[Trig modulo]
datatype: DOUBLE
def_value: 1
low_lim: 1
high_lim: 255
set_cmd: :TRIG:ECO
group: Trigger
section: Trig/Reference

[Trig slope]
datatype: COMBO
def_value: Positive
combo_def_1: Positive
combo_def_2: Negative
combo_def_3: Both, neg. first
combo_def_4: Both, pos. first
cmd_def_1: POS
cmd_def_2: NEG
cmd_def_3: NP
cmd_def_4: PN
set_cmd: :TRIG:SLOP
group: Trigger
section: Trig/Reference

[Trig delay]
unit: s
datatype: DOUBLE
def_value: 0
set_cmd: :TRIG:DEL
state_quant: Trigger
state_value_1: External
group: Trigger
section: Trig/Reference


[AM - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :AM:STAT
group: Amplitude modulation
section: Modulation
[AM - Depth]
datatype: DOUBLE
def_value: 0.8
low_lim: 0.0
high_lim: 0.99
set_cmd: :AM:DEPT
state_quant: AM - Enabled
state_value_1: 1
group: Amplitude modulation
section: Modulation
[AM - Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :AM:SOUR
state_quant: AM - Enabled
state_value_1: 1
group: Amplitude modulation
section: Modulation
[AM - Frequency]
datatype: DOUBLE
def_value: 400
unit: Hz
set_cmd: :AM:INT:FREQ
state_quant: AM - Source
state_value_1: Internal
group: Amplitude modulation
section: Modulation

[FM - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :FM:STAT
group: Frequency modulation
section: Modulation
[FM - Deviation]
datatype: DOUBLE
def_value: 1000
unit: Hz
set_cmd: :FM:DEV
state_quant: FM - Enabled
state_value_1: 1
group: Frequency modulation
section: Modulation
[FM - Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :FM:SOUR
state_quant: FM - Enabled
state_value_1: 1
group: Frequency modulation
section: Modulation
[FM - Internal]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Ramp up
combo_def_3: Ramp down
combo_def_4: Square
combo_def_5: Triangle
cmd_def_1: SINE
cmd_def_2: RU
cmd_def_3: RD
cmd_def_4: SQU
cmd_def_5: TRI
set_cmd: :FM:INT:SHAP
state_quant: FM - Source
state_value_1: Internal
group: Frequency modulation
section: Modulation
[FM - Frequency]
datatype: DOUBLE
def_value: 400
unit: Hz
set_cmd: :FM:INT:FREQ
state_quant: FM - Source
state_value_1: Internal
group: Frequency modulation
section: Modulation
[FM - Sensitivity]
datatype: DOUBLE
def_value: 1000
unit: Hz/V
set_cmd: :FM:SENS
state_quant: FM - Source
state_value_1: External
group: Frequency modulation
section: Modulation

[PM - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :PM:STAT
group: Phase modulation
section: Modulation
[PM - Deviation]
datatype: DOUBLE
def_value: 2.4
unit: rad
set_cmd: :PM:DEV
state_quant: PM - Enabled
state_value_1: 1
group: Phase modulation
section: Modulation
[PM - Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :PM:SOUR
state_quant: PM - Enabled
state_value_1: 1
group: Phase modulation
section: Modulation
[PM - Internal]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Ramp up
combo_def_3: Ramp down
combo_def_4: Square
combo_def_5: Triangle
cmd_def_1: SINE
cmd_def_2: RU
cmd_def_3: RD
cmd_def_4: SQU
cmd_def_5: TRI
set_cmd: :PM:INT:SHAP
state_quant: PM - Source
state_value_1: Internal
group: Phase modulation
section: Modulation
[PM - Frequency]
datatype: DOUBLE
def_value: 400
unit: Hz
set_cmd: :PM:INT:FREQ
state_quant: PM - Source
state_value_1: Internal
group: Phase modulation
section: Modulation
[PM - Sensitivity]
datatype: DOUBLE
def_value: 2.4
unit: rad/V
set_cmd: :PM:SENS
state_quant: PM - Source
state_value_1: External
group: Phase modulation
section: Modulation

[FM/PM - Coupling]
datatype: COMBO
def_value: AC
combo_def_1: DC
combo_def_2: AC
cmd_def_1: DC
cmd_def_2: AC
set_cmd: :FM:COUP
group: Frequency/Phase modulation
section: Modulation


[LF output]
datatype: BOOLEAN
def_value: False
set_cmd: :LFO:STAT
group: Low-frequency output
section: Low-frequency output

[LF source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: Pulse modulation
combo_def_3: Trigger
cmd_def_1: LFGenerator
cmd_def_2: PULM
cmd_def_3: TRIGger
set_cmd: :LFO:SOUR
state_quant: LF output
state_value_1: 1
group: Low-frequency output
section: Low-frequency output

[LF shape]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Triangle
combo_def_3: Square
cmd_def_1: SINE
cmd_def_2: TRI
cmd_def_3: SQU
set_cmd: :LFO:SHAP
state_quant: LF source
state_value_1: Internal
group: Low-frequency output
section: Low-frequency output

[LF frequency]
unit: Hz
datatype: DOUBLE
def_value: 400
set_cmd: :LFO:FREQ
state_quant: LF source
state_value_1: Internal
group: Low-frequency output
section: Low-frequency output

[LF amplitude]
unit: V
datatype: DOUBLE
def_value: 400
set_cmd: :LFO:AMPL
state_quant: LF shape
state_value_1: Sinusoid
state_value_2: Triangle
group: Low-frequency output
section: Low-frequency output

[Trig output mode]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Gate
combo_def_3: Point
cmd_def_1: NORM
cmd_def_2: GATE
cmd_def_3: POIN
set_cmd: :TRIG:OUTP:MODE
state_quant: LF source
state_value_1: Trigger
group: Low-frequency output
section: Low-frequency output

[Trig output polarity]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
set_cmd: :TRIG:OUTP:POL
state_quant: LF source
state_value_1: Trigger
group: Low-frequency output
section: Low-frequency output
